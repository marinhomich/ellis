name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SERVICE_NAME: minha-api
  PROJECT_ID: blissful-star-464816-t6
  REGION: us-east1
  REPO_REGION: us-central1
  REPO_NAME: ellis
  IMAGE_NAME: custom-fastapi
  IMAGE_URL: us-central1-docker.pkg.dev/blissful-star-464816-t6/ellis/custom-fastapi

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Enable required APIs (first-time only)
        run: |
          gcloud services enable run.googleapis.com artifactregistry.googleapis.com

      - name: Create Artifact Registry repo if it doesn't exist
        run: |
          if ! gcloud artifacts repositories describe ${{ env.REPO_NAME }} \
            --location=${{ env.REPO_REGION }} >/dev/null 2>&1; then
            echo "Creating Artifact Registry repo ${{ env.REPO_NAME }}"
            gcloud artifacts repositories create ${{ env.REPO_NAME }} \
              --repository-format=docker \
              --location=${{ env.REPO_REGION }} \
              --description="Docker repo for Cloud Run"
          else
            echo "Artifact Registry repo ${{ env.REPO_NAME }} already exists."
          fi

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.REPO_REGION }}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ env.IMAGE_URL }}:latest -f Dockerfile.prod .
          docker push ${{ env.IMAGE_URL }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE_URL }}:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated
